// src/jsdoc/constants.js

// Tags that the generator will try to manage, generate, or overwrite.
// Their content might be replaced by AI-generated descriptions or inferred types.
exports.MANAGED_JSDOC_TAGS = new Set([
  'param',
  'returns',
  'throws',
  'example',
  'class',
  'description',
  'constructor',
  'augments',
  'extends',
]);

// A broader list of valid JSDoc tags. Tags not in MANAGED_JSDOC_TAGS but in this list
// will be preserved as-is. Tags not in this list will be preserved but with a warning.
exports.VALID_JSDOC_TAGS = new Set([
  'abstract',
  'access',
  'alias',
  'arg',
  'argument',
  'async',
  'augments',
  'author',
  'borrows',
  'callback',
  'class',
  'classdesc',
  'const',
  'constant',
  'constructor',
  'constructs',
  'copyright',
  'default',
  'defaultvalue',
  'deprecated',
  'desc',
  'description',
  'enum',
  'event',
  'example',
  'exports',
  'external',
  'file',
  'fileoverview',
  '' /* allows for empty lines/main desc */,
  'fires',
  'function',
  'func',
  'host',
  'ignore',
  'implements',
  'inheritdoc',
  'inner',
  'instance',
  'interface',
  'internal',
  'kind',
  'lends',
  'license',
  'listens',
  'member',
  'memberof',
  'method',
  'mixes',
  'mixin',
  'module',
  'name',
  'namespace',
  'override',
  'overrides',
  'package',
  'param',
  'private',
  'property',
  'prop',
  'protected',
  'public',
  'readonly',
  'requires',
  'returns',
  'return',
  'see',
  'since',
  'static',
  'summary',
  'super',
  'this',
  'throws',
  'throw',
  'todo',
  'tutorial',
  'type',
  'typedef',
  'var',
  'variation',
  'version',
  'virtual',
  'yields',
  'yield',
]);
